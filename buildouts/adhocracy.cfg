##############################################################################
# Basic buildout to unstall adhocracy without theming
#
##############################################################################

[buildout]
extensions = mr.developer buildout.dumppickedversions
environment-vars = PYTHON_EGG_CACHE ${buildout:directory}.python-eggs
find-links +=
    http://adhocracy-buildout.cs.uni-duesseldorf.de/mirrors/dist.plone.org/thirdparty/
    http://dist.plone.org/thirdparty
    http://initd.org/pub/software/psycopg/
# index = http://adhocracy-buildout.cs.uni-duesseldorf.de/eggproxy/
versions = versions
#unzip all python eggs
unzip = true
#develop adhocracy package
develop = .
#checkout all dependency sources
auto-checkout = *
#do not look for new egg versions
newest = false
#wait max seconds to download eggs
socket_timeout = 3
#allow to use this buildout without virtualenv
include-site-packages = false

##############################################################################
# Include buildout files to install adhocracy and dependencies
##############################################################################

extends =
# include buildout files to build adhocracy/dependencies
# warning: changes may cauGse buildout to recompile all stuff
    ../versions.cfg
    base.cfg
    postgres.cfg
    memcache.cfg
    solr.cfg
    rabbitmq.cfg
    apache.cfg
    sysvinit.cfg
    
# additional eggs to be installed
eggs +=
    pysqlite
    WSGIRewrite
    repoze.xmliter
    PILwoTK == 1.1.6.4
    adhocracy
    BeautifulSoup
    fanstatic
    Paste
    PasteDeploy 

# additional parts to be installed
parts +=
    adhocracy_conf
    test_conf
    adhocracy_setup 
    paster
    supervisor
    adhocracy_setup_database
 
##############################################################################
# Override System Settings
##############################################################################

[domains]
main = adhocracy.lan
main.force_port =
solr = localhost
rabbitmq = localhost

[ports]
main = 5001
memcached = 5005
# warning: rabbitmq also starts epmd (0.0.0.0:4369) and beam.smp on various ports
rabbitmq =  5006
rabbitmq_nodename = bunny1
solr =  5007
supervisor = 5010
postgres = 5008

[user]
# use current user to start adhocracy
adhocracy_user = ${env:USER}

##############################################################################
# Override postgres settings
##############################################################################

[postgres]
#needed to generate adhocracy:sqlalchemy.url
dbname = adhocracy
dbuser = adhocracy
#needed to setup postgres
initdb_dir = ${buildout:directory}/var/postgresql/data

##############################################################################
# Adhocracy settings
##############################################################################

[adhocracy]
#start adhocracy in debug mode
debug = False
#TODO use geo features (You also need to include postgres_with_postgis instead of postgres)
geo = False
#use diazo theming - read buildout_with_theming.cfg for more info
themed = False

protocol = http
host = 127.0.0.1
#Session secret, replace this with a randomly generated hash value or use "autogenerated" to let
#buildout do the job
secret = autogenerated
#Adhocracy email from:
email.from = mail@adhocracy.cc
#Error emails:
email.to =
smtp_server = localhost
smtp_port = 25 
#Database connection
sqlalchemy.url = postgresql://${postgres:dbuser}@localhost:${ports:postgres}/${postgres:dbname}
#sqlalchemy.url = postgres://nutzer:passwort@localhost/20101128
#Use /i/instance/... instead of http://instance.adhocracy.lan/..
relative_urls = False
#Running behind a proxy (Use X-Forwarded-For header to determine IP addresses)
behind_proxy = False
#Site name for all instances, part of the html <title>, notification E-Mails etc
site.name = Adhocracy
language = de_DE
#Use /i/instance/... instead of http://instance.adhocracy.lan/..
relative_urls = False
# Running behind a proxy (Use X-Forwarded-For header to determine IP addresses)
behind_proxy = False
#custom adhocracy settings placed at the end of file (etc/adhocracy.ini)
#read etc/adhocracy.ini to learn all options
settings_override =
#    [logger_routes]
#    level = Debug

[twitter]
username =
key =
secret =
consumer_key =
consumer_secret =
#Full path to a twitter profile, e.g. http://twitter.com/liqd_de
profile_url =
 
##############################################################################
# Versions and code
##############################################################################

[adhocracy_code]
#read buildout_with_theming.cfg for more info
diazo_theme_rules_dir =

[sources]
# you can include external code repositories here with mr.developer 

##############################################################################
# Setup adhocracy
##############################################################################

# generate the adhocracy config file
[adhocracy_conf]
recipe = collective.recipe.genshi
input = ${buildout:directory}/etc/adhocracy.ini.in
output = ${buildout:directory}/etc/adhocracy.ini

# generate the adhocracy test config file
[test_conf]
recipe = collective.recipe.genshi
input = ${buildout:directory}/etc/test.ini.in
output = ${buildout:directory}/etc/test.ini

#do nice stuff 
[adhocracy_setup]
recipe = plone.recipe.command
command =
    chmod -R g+rw var/data
    ln -s parts/omelette installed_eggs
 
#install paster to set up adhocracy
[paster]
#recipe = zc.recipe.egg
recipe = minitage.recipe.scripts
eggs =
    ${buildout:eggs}
    Paste
    PasteScript
    PasteDeploy
entry-points = paster=paste.script.command:run
initialization =
    import paste.script.command
    paste.script.command.system_plugins.append('adhocracy')

#setup the adhcracy database 
[adhocracy_setup_database]
recipe = plone.recipe.command
command =
#set LDPATH
    export ${supervisor:environment}
    DATABASE=`` ;
#if database is running setup-app adhocracy
    if [ -f ${postgres:initdb_dir}/postmaster.pid ] ; then
        ${buildout:bin-directory}/paster setup-app ${buildout:directory}/etc/adhocracy.ini --name=content
#else try to start the database first
    else
        ${buildout:bin-directory}/pg_ctl -D ${postgres:initdb_dir} start
        sleep 5
        ${buildout:bin-directory}/paster setup-app ${buildout:directory}/etc/adhocracy.ini --name=content
        ${buildout:bin-directory}/pg_ctl -D ${postgres:initdb_dir} stop
    fi              

##############################################################################
# Set up supervisor to run it all
##############################################################################

[supervisor]
recipe = collective.recipe.supervisor
port = 127.0.0.1:${ports:supervisor}
programs +=
    40 adhocracy_background (environment=${supervisor:environment} redirect_stderr=true stdout_logfile=var/log/background.log stderr_logfile=NONE) ${buildout:bin-directory}/paster [--plugin=adhocracy background -c ${buildout:directory}/etc/adhocracy.ini]
    45 adhocracy (environment=${supervisor:environment} redirect_stderr=true stdout_logfile=var/log/adhocracy.log stderr_logfile=NONE) ${buildout:bin-directory}/paster [serve ${buildout:directory}/etc/adhocracy.ini] 
